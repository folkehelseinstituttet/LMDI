name: Generate IG and publish to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'LMDI/**'

env:
  IG_SHORTNAME: LMDI

jobs:
  publish:
    runs-on: ubuntu-latest
    container: hl7fhir/ig-publisher-base:latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: 🖥️ Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🔎 Les no-basis-versjon fra sushi-config.yaml
        id: nobasis
        shell: bash
        run: |
          CFG="LMDI/sushi-config.yaml"
          if [ ! -f "$CFG" ]; then
            CFG="sushi-config.yaml"
          fi
          VER=$(grep -E "^[[:space:]]*hl7\.fhir\.no\.basis:" "$CFG" | sed -E 's/.*hl7\.fhir\.no\.basis:[[:space:]]*"?([0-9]+\.[0-9]+\.[0-9]+)"?.*/\1/')
          if [ -z "$VER" ]; then
            echo "Fant ikke no-basis-versjon i $CFG"; exit 1
          fi
          echo "NO_BASIS_VERSION=$VER" >> $GITHUB_ENV
          echo "Oppdaget no-basis versjon: $VER"

      - name: 📦 Installer FHIR-pakker (core + no-basis snapshot)
        shell: bash
        run: |
          set -euo pipefail
          
          echo "=========================================="
          echo "FHIR pakke-installasjon (no-basis snapshot)"
          echo "=========================================="
          
          # Bruk temp katalog for å unngå package.json konflikter
          TEMP_DIR=$(mktemp -d)
          echo "📁 Temp katalog: $TEMP_DIR"
          
          pushd "$TEMP_DIR" > /dev/null
          
          # Steg 1: Installer FHIR R4 Core fra Simplifier
          echo ""
          echo "📦 Steg 1: Installerer FHIR R4 Core fra Simplifier..."
          npm --registry https://packages.simplifier.net install hl7.fhir.r4.core@4.0.1 --no-save
          
          if [ ! -d "node_modules/hl7.fhir.r4.core" ]; then
            echo "❌ FHIR R4 Core installasjon mislyktes!"
            exit 1
          fi
          echo "✅ FHIR R4 Core installert"
          
          # Steg 2: Last ned no-basis snapshot
          echo ""
          echo "📦 Steg 2: Laster ned no-basis ${NO_BASIS_VERSION} snapshot..."
          SNAPSHOT_FILE="hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz"
          
          curl -sSL -o "$SNAPSHOT_FILE" \
            "https://raw.githubusercontent.com/HL7Norway/resources/main/snapshots/$SNAPSHOT_FILE"
          
          if [ ! -f "$SNAPSHOT_FILE" ]; then
            echo "❌ Snapshot nedlasting mislyktes!"
            exit 1
          fi
          echo "✅ Snapshot nedlastet: $(ls -lh $SNAPSHOT_FILE | awk '{print $5}')"
          
          # Steg 3: Installer snapshot med npm
          echo ""
          echo "📦 Steg 3: Installerer no-basis snapshot med npm..."
          npm install --no-save "./$SNAPSHOT_FILE"
          
          if [ ! -d "node_modules/hl7.fhir.no.basis" ]; then
            echo "❌ no-basis snapshot npm-installasjon mislyktes!"
            exit 1
          fi
          echo "✅ no-basis snapshot installert med npm"
          
          # Steg 4: Kopier til FHIR package cache
          echo ""
          echo "📦 Steg 4: Kopierer til FHIR package cache..."
          CACHE_TARGET="/github/home/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}"
          mkdir -p "$CACHE_TARGET/package"
          
          cp -r node_modules/hl7.fhir.no.basis/* "$CACHE_TARGET/package/"
          
          # Verifiser installasjon
          if [ ! -f "$CACHE_TARGET/package/package.json" ]; then
            echo "❌ Kopiering til FHIR cache mislyktes!"
            exit 1
          fi
          echo "✅ no-basis kopiert til FHIR cache"
          
          # Verifiser snapshot data i kritiske profiler
          echo ""
          echo "🔍 Verifiserer snapshot data..."
          SUBSTANCE_PROFILE="$CACHE_TARGET/package/StructureDefinition-no-basis-Substance.json"
          
          if [ -f "$SUBSTANCE_PROFILE" ]; then
            if grep -q '"snapshot"' "$SUBSTANCE_PROFILE"; then
              echo "✅ Bekreftet snapshot data i no-basis-Substance"
            else
              echo "⚠️ Advarsel: no-basis-Substance mangler muligens snapshot data"
            fi
          else
            echo "⚠️ Advarsel: no-basis-Substance profil ikke funnet"
          fi
          
          popd > /dev/null
          rm -rf "$TEMP_DIR"
          
          echo ""
          echo "✅ Alle FHIR-pakker installert og verifisert!"

      - name: 🍣 Installer SUSHI globalt
        shell: bash
        run: |
          echo "📦 Installerer SUSHI..."
          npm install -g fsh-sushi
          
          if command -v sushi &> /dev/null; then
            echo "✅ SUSHI installert:"
            sushi --version
          else
            echo "❌ SUSHI installasjon mislyktes!"
            exit 1
          fi

      - name: 📚 Last ned IG Publisher
        shell: bash
        run: |
          echo "📦 Laster ned IG Publisher..."
          mkdir -p "$IG_SHORTNAME/input-cache"
          
          curl -sSL -o "$IG_SHORTNAME/input-cache/publisher.jar" \
            https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar
          
          if [ -f "$IG_SHORTNAME/input-cache/publisher.jar" ]; then
            echo "✅ IG Publisher nedlastet: $(ls -lh $IG_SHORTNAME/input-cache/publisher.jar | awk '{print $5}')"
          else
            echo "❌ IG Publisher nedlasting mislyktes!"
            exit 1
          fi

      - name: 🏗️ Kjør IG Publisher med Sushi
        shell: bash
        run: |
          set -euo pipefail
          
          cd "$IG_SHORTNAME"
          echo "🏗️ Kjører IG Publisher i $(pwd)..."
          
          # Sjekk at vi har publisher.jar
          if [ ! -f "input-cache/publisher.jar" ]; then
            echo "❌ publisher.jar ikke funnet!"
            exit 1
          fi
          
          # Sjekk at vi har ig.ini
          if [ ! -f "ig.ini" ]; then
            echo "❌ ig.ini ikke funnet!"
            exit 1
          fi
          
          # Kjør IG Publisher (med intern SUSHI)
          java -jar input-cache/publisher.jar -ig ig.ini
          PUBLISHER_EXIT_CODE=$?
          
          if [ $PUBLISHER_EXIT_CODE -eq 0 ]; then
            echo "✅ IG Publisher fullført uten feil"
            
            # Sjekk at output katalog ble opprettet
            if [ -d "output" ]; then
              OUTPUT_SIZE=$(du -sh output 2>/dev/null | cut -f1)
              echo "📋 Output katalog opprettet (størrelse: $OUTPUT_SIZE)"
            fi
          else
            echo "❌ IG Publisher mislyktes (exit code: $PUBLISHER_EXIT_CODE)"
            exit $PUBLISHER_EXIT_CODE
          fi
          
      - name: 🚀 Deploy til GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.IG_SHORTNAME }}/output
          destination_dir: currentbuild
          exclude_assets: '**.pack'
          commit_message: '${{ env.IG_SHORTNAME }}: ${{ github.event.head_commit.message }}'