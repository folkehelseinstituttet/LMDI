name: LMDI-gh-pages-root

on:
  workflow_dispatch:

# The short name is used to identify the IG and the folder where the IG is located
env:
  IG_SHORTNAME: LMDI

# The following jobs are equal for all IGs and can be moved to a common composite-action if 'uses'-support is added, see:
# https://github.com/actions/runner/blob/main/docs/adrs/1144-composite-actions.md
# "Hardkodet" for no-basis 2.2.0
jobs:
  publish:
    runs-on: ubuntu-latest
    container: hl7fhir/ig-publisher-base:latest 
    steps:
      - uses: actions/checkout@v4
      - name: üñ•Ô∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install üî• FHIR packages üá≥üá¥
        run: |
          set -euo pipefail
          
          echo "=========================================="
          echo "FHIR pakke-installasjon (no-basis snapshot)"
          echo "=========================================="
          
          # Bruk temp katalog for √• unng√• package.json konflikter
          TEMP_DIR=$(mktemp -d)
          echo "üìÅ Temp katalog: $TEMP_DIR"
          
          pushd "$TEMP_DIR" > /dev/null
          
          # Steg 1: Installer FHIR R4 Core fra Simplifier
          echo ""
          echo "üì¶ Steg 1: NPM install fhir r4 core 4.0.1 from package registry"
          npm --registry https://packages.simplifier.net install hl7.fhir.r4.core@4.0.1 --no-save
          
          if [ ! -d "node_modules/hl7.fhir.r4.core" ]; then
            echo "‚ùå FHIR R4 Core installasjon mislyktes!"
            exit 1
          fi
          echo "‚úÖ FHIR R4 Core installert"
          
          # Steg 2: Last ned no-basis snapshot
          echo ""
          echo "üì¶ Steg 2: NPM install hl7.fhir.no.basis-2.2.0 from https://github.com/HL7Norway/resources/"
          curl -sSL -o hl7.fhir.no.basis-2.2.0-snapshots.tgz \
            https://raw.githubusercontent.com/HL7Norway/resources/main/snapshots/hl7.fhir.no.basis-2.2.0-snapshots.tgz
          
          if [ ! -f "hl7.fhir.no.basis-2.2.0-snapshots.tgz" ]; then
            echo "‚ùå Snapshot nedlasting mislyktes!"
            exit 1
          fi
          echo "‚úÖ Snapshot nedlastet: $(ls -lh hl7.fhir.no.basis-2.2.0-snapshots.tgz | awk '{print $5}')"
          
          # Steg 3: Installer snapshot med npm
          echo ""
          echo "üì¶ Steg 3: npm install snapshot (lokalt)"
          npm install --no-save hl7.fhir.no.basis-2.2.0-snapshots.tgz
          
          if [ ! -d "node_modules/hl7.fhir.no.basis" ]; then
            echo "‚ùå no-basis snapshot npm-installasjon mislyktes!"
            exit 1
          fi
          echo "‚úÖ no-basis snapshot installert med npm"
          
          # Steg 4: Kopier til FHIR package cache
          echo ""
          echo "üì¶ Steg 4: Create .fhir packages cache directory for no-basis"
          CACHE_TARGET="/github/home/.fhir/packages/hl7.fhir.no.basis#2.2.0"
          mkdir -p "$CACHE_TARGET/package"
          
          echo "Copy local no-basis snapshot to .fhir package cache directory"
          cp -r node_modules/hl7.fhir.no.basis/* "$CACHE_TARGET/package/"
          
          # Verifiser installasjon
          if [ ! -f "$CACHE_TARGET/package/package.json" ]; then
            echo "‚ùå Kopiering til FHIR cache mislyktes!"
            exit 1
          fi
          echo "‚úÖ no-basis kopiert til FHIR cache"
          
          # Verifiser snapshot data i kritiske profiler
          echo ""
          echo "üîç Verifiserer snapshot data..."
          SUBSTANCE_PROFILE="$CACHE_TARGET/package/StructureDefinition-no-basis-Substance.json"
          
          if [ -f "$SUBSTANCE_PROFILE" ]; then
            if grep -q '"snapshot"' "$SUBSTANCE_PROFILE"; then
              echo "‚úÖ Bekreftet snapshot data i no-basis-Substance"
            else
              echo "‚ö†Ô∏è Advarsel: no-basis-Substance mangler muligens snapshot data"
            fi
          else
            echo "‚ö†Ô∏è Advarsel: no-basis-Substance profil ikke funnet"
          fi
          
          popd > /dev/null
          rm -rf "$TEMP_DIR"
          
          echo ""
          echo "‚úÖ Alle FHIR-pakker installert og verifisert!" 

      - name: üç£ Install Sushi compiler
        run: |
          echo "üì¶ Install Sushi compiler"
          npm install -g fsh-sushi
          
          if command -v sushi &> /dev/null; then
            echo "‚úÖ SUSHI installert:"
            sushi --version
          else
            echo "‚ùå SUSHI installasjon mislyktes!"
            exit 1
          fi

      - name: üìö Get latest IG Publisher
        run: |
          echo "üì¶ Get latest publisher"
          mkdir -p "${{ env.IG_SHORTNAME }}/input-cache"
          
          curl -sSL -o "${{ env.IG_SHORTNAME }}/input-cache/publisher.jar" \
            https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar
          
          if [ -f "${{ env.IG_SHORTNAME }}/input-cache/publisher.jar" ]; then
            echo "‚úÖ IG Publisher nedlastet: $(ls -lh ${{ env.IG_SHORTNAME }}/input-cache/publisher.jar | awk '{print $5}')"
          else
            echo "‚ùå IG Publisher nedlasting mislyktes!"
            exit 1
          fi

      - name: Run üî• IG Publisher with üç£ Sushi
        run: |
          set -euo pipefail
          
          cd ${{ env.IG_SHORTNAME }}
          echo "üèóÔ∏è Run IG publisher i $(pwd)..."
          
          # Sjekk at vi har publisher.jar
          if [ ! -f "input-cache/publisher.jar" ]; then
            echo "‚ùå publisher.jar ikke funnet!"
            exit 1
          fi
          
          # Sjekk at vi har ig.ini
          if [ ! -f "ig.ini" ]; then
            echo "‚ùå ig.ini ikke funnet!"
            exit 1
          fi
          
          # Kj√∏r IG Publisher
          java -jar input-cache/publisher.jar -ig ig.ini
          PUBLISHER_EXIT_CODE=$?
          
          if [ $PUBLISHER_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ IG Publisher fullf√∏rt uten feil"
            
            # Sjekk at output katalog ble opprettet
            if [ -d "output" ]; then
              OUTPUT_SIZE=$(du -sh output 2>/dev/null | cut -f1)
              echo "üìã Output katalog opprettet (st√∏rrelse: $OUTPUT_SIZE)"
            fi
          else
            echo "‚ùå IG Publisher mislyktes (exit code: $PUBLISHER_EXIT_CODE)"
            exit $PUBLISHER_EXIT_CODE
          fi
          
      - name: üìÑ Kopier certificates.zip til output
        run: |
          if [ -f "${{ env.IG_SHORTNAME }}/input/includes/certificates.zip" ]; then
            cp "${{ env.IG_SHORTNAME }}/input/includes/certificates.zip" "$GITHUB_WORKSPACE/${{ env.IG_SHORTNAME }}/output/"
            echo "‚úÖ Kopierte certificates.zip til output"
          else
            echo "‚ö†Ô∏è certificates.zip ikke funnet, hopper over"
          fi

      # Publishes the HTML page to a seperate branch in order to host it using GitHub-Pages.
      # This will overwrite the currently published HTML page.
      - name: üöÄ Deploy to GitHub-Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.IG_SHORTNAME }}/output
          exclude_assets: '**.tgz,**.pack'
          commit_message: 'Deploy til rot: ${{ env.IG_SHORTNAME }} - ${{ github.event.head_commit.message }}'