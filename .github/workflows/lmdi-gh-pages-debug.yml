name: LMDI-gh-pages-currentbuild

on:
  workflow_dispatch:

env:
  IG: LMDI

# The following jobs are equal for all IGs and can be moved to a common composite-action if 'uses'-support is added, see:
# https://github.com/actions/runner/blob/main/docs/adrs/1144-composite-actions.md
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Persist the FHIR Package Cache between runners.
      # Doc: https://confluence.hl7.org/display/FHIR/FHIR+Package+Cache
      - name: üóÇÔ∏è Cache FHIR Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.fhir/packages
          key: fhir-packages

      # Persist the IG Publisher input-cache between runners.
      # Doc: https://build.fhir.org/ig/FHIR/ig-guidance/using-templates.html#igroot-input-cache
      - name: üóÇÔ∏è Cache IG Publisher input-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.IG }}/input-cache
          key: ig-publisher-input-cache           
      
      - name: üîé Les no-basis-versjon fra sushi-config.yaml
        id: nobasis
        shell: bash
        run: |
          CFG="LMDI/sushi-config.yaml"
          if [ ! -f "$CFG" ]; then
            CFG="sushi-config.yaml"
          fi
          VER=$(grep -E "^[[:space:]]*hl7\.fhir\.no\.basis:" "$CFG" | sed -E 's/.*hl7\.fhir\.no\.basis:[[:space:]]*"?([0-9]+\.[0-9]+\.[0-9]+)"?.*/\1/')
          if [ -z "$VER" ]; then
            echo "Fant ikke no-basis-versjon i $CFG"; exit 1
          fi
          echo "NO_BASIS_VERSION=$VER" >> $GITHUB_ENV
          echo "Oppdaget no-basis versjon: $VER"

      # Install FHIR packages including no-basis snapshot
      - name: üì¶ Installer FHIR-pakker (core + no-basis snapshot)
        shell: bash
        run: |
          set -e
          echo "üöÄ Starter installasjon av FHIR-pakker..."
          echo "NO_BASIS_VERSION er satt til: $NO_BASIS_VERSION"
          
          # Slett eventuell eksisterende package.json for √• unng√• konflikter
          if [ -f "package.json" ]; then
            echo "üóëÔ∏è Sletter eksisterende package.json for √• unng√• konflikter"
            rm package.json
          fi
          
          echo "üì• Last ned no-basis snapshot $NO_BASIS_VERSION f√∏rst"
          curl -L -o hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz \
            https://raw.githubusercontent.com/HL7Norway/resources/main/snapshots/hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz
          
          echo "üîç Verifiser at snapshot-filen ble lastet ned"
          if [ -f "hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz" ]; then
            ls -la hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz
            echo "‚úÖ Snapshot-fil lastet ned"
          else
            echo "‚ùå Nedlasting feilet!"
            exit 1
          fi

          echo "üì¶ Installer FHIR R4 core (4.0.1)"
          npm --registry https://packages.simplifier.net install hl7.fhir.r4.core@4.0.1
          if [ $? -eq 0 ]; then
            echo "‚úÖ FHIR R4 core installasjon fullf√∏rt"
          else
            echo "‚ùå FHIR R4 core installasjon feilet"
            exit 1
          fi

          echo "üì¶ npm install snapshot (lokalt)"
          npm install hl7.fhir.no.basis-${NO_BASIS_VERSION}-snapshots.tgz
          if [ $? -eq 0 ]; then
            echo "‚úÖ Snapshot npm installasjon fullf√∏rt"
          else
            echo "‚ùå Snapshot npm installasjon feilet"
            exit 1
          fi

          echo "üìÅ Forbered .fhir cache"
          mkdir -p ~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package
          cp -r ./node_modules/hl7.fhir.no.basis/* ~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package
          echo "‚úÖ Lokal .fhir cache opprettet og fylt"
          
          echo "üîç Verifiser at no-basis-Substance finnes med snapshot"
          if [ -f "~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/no-basis-Substance.StructureDefinition.json" ]; then
            echo "‚úÖ no-basis-Substance.StructureDefinition.json finnes"
            if grep -q '"snapshot"' ~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/no-basis-Substance.StructureDefinition.json; then
              echo "‚úÖ Snapshot finnes i no-basis-Substance profil"
            else
              echo "‚ùå Mangler snapshot i no-basis-Substance profil"
            fi
          else
            echo "‚ùå no-basis-Substance.StructureDefinition.json ikke funnet"
          fi
          
          echo "üéâ Alle FHIR-pakker installert!"

      # Inject snapshot directly into the Docker volume mount
      - name: üîß Inject snapshot for Docker container  
        shell: bash
        run: |
          echo "üöö Injecting snapshot into Docker volume mount"
          # Place the snapshot package where Docker can access it through volume mounts
          mkdir -p /tmp/fhir-cache/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package
          cp -r ~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/* /tmp/fhir-cache/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/
          
          # Also place it in current directory for easy access
          mkdir -p .fhir-snapshot/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package
          cp -r ~/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/* .fhir-snapshot/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/
          
          echo "‚úÖ Snapshot pakke klargjort for Docker"

      # Downloads the newest version of the IG Publisher, this could probable be cached.
      - name: üì• Download IG Publisher
        run: wget -q https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar

      # Builds the HTML page for the IG.
      - name: üèÉ‚Äç‚ôÇÔ∏è Run IG Publisher with snapshot injection
        shell: bash
        run: |
          echo "üöÄ Starting IG Publisher with snapshot injection"
          
          # Run IG Publisher with volume mount for snapshot
          docker run --rm \
            -v "${PWD}:/github/workspace" \
            -v "${PWD}/.fhir-snapshot:/home/publisher/.fhir" \
            -e IG="${{ env.IG }}" \
            -e NO_BASIS_VERSION="${{ env.NO_BASIS_VERSION }}" \
            --workdir /github/workspace \
            hl7fhir/ig-publisher-base:latest \
            bash -c "
              echo 'Docker container started'
              echo 'Checking for snapshot in container:'
              ls -la /home/publisher/.fhir/packages/ || echo 'No packages directory'
              
              if [ -f '/home/publisher/.fhir/packages/hl7.fhir.no.basis#${NO_BASIS_VERSION}/package/no-basis-Substance.StructureDefinition.json' ]; then
                echo '‚úÖ Found snapshot in Docker container'
              else 
                echo '‚ùå Snapshot not found in Docker container'
              fi
              
              echo 'Running IG Publisher'
              java -jar publisher.jar publisher -ig ${{ env.IG }}/ig.ini -generate
            "

      # Kopierer certificates.zip til output
      - name: Copy certificates.zip
        run: |
          cp ${{ env.IG }}/input/includes/certificates.zip $GITHUB_WORKSPACE/LMDI/output/



        # Publishes the HTML page to a seperate branch in order to host it using GitHub-Pages.
      # This will overwrite the currently published HTML page.
      - name: üöÄ Deploy to GitHub-Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.IG }}/output
          destination_dir: currentbuild
          exclude_assets: '**.tgz,**.pack'
          commit_message: '${{ env.IG }}: ${{ github.event.head_commit.message }}'
